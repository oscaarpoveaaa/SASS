//Variable que guarda un color azul para los titulos
$colorTitulo : rgb(40, 97, 204);

//Variable que guarda el tamaño para los titulos
$sizeTitulo : 25px;

//Variable que guarda la alineación para los titulos
$alineacionTitulo : center;

//Variable que guarda el color de los subtitulos
$colorSubtitulo : rgb(224, 51, 181);

//Variable que guarda el tamaño para los subtitulos
$sizeSubtitulo : 15px;

//Variable que guarda el formato cursiva
$cursiva : italic;

//Utilizo todas las variables para los titulos
.titulo {
    color : $colorTitulo;
    font-size: $sizeTitulo;
    text-align: $alineacionTitulo;  
}

//Utilizo todas las variables para los subtitulos
.subtitulo{
    color : $colorSubtitulo;
    font-size: $sizeSubtitulo;
    text-align: $alineacionTitulo;
    font-style: $cursiva;  
}

//Creo un cuadrado base con la anchura, altura y un margen para que despues extiendan de el mas cuadrados con distintos colores 
.cuadrado {
    width: 100%;
    height: 100px;
    margin-top: 15px
}

//Cuadrado negro que extiende de cuadrado
.cuadradoNegro{
    @extend .cuadrado;
    background-color: black;
}

//Cuadrado amarillo que extiende de cuadrado
.cuadradoAmarillo{
    @extend .cuadrado;
    background-color: yellow;
}

.sombra{
    text-shadow: black 0.1em 0.1em 0.2em;
}

.textoCuadrados {
    font-size: 20px;
    text-align: center;
}

//Texto que extiende de el texto para dentro de los cuadrados
.textoCNegro{
    @extend .textoCuadrados;
    color: white;
    text-decoration: overline white;
    font-style: $cursiva;  

}

//Extiende de sombra 
.textoCAmarillo{
    @extend .textoCuadrados;
    @extend .sombra;
    color: blue;
}

ul{
    //1º Operación: Suma 5
    font-size: 30px + 5;
    color : blue;
    ul{
        //2º Operación: Resta 5
        font-size: 35px - 5;
        color : red;
        ul{
            //3º Operación: Multiplica por 5
            font-size: 5px * 5;
            color : green;
            ul{
                //4º Operación: Multiplica por 7
                font-size:7px * 5;
                color : orange;
            }
        }
    }
}

//Mixin que le pone un bordes a un botón
@mixin redondear-border($radio) {
    border-radius: $radio;
  }

//Mixin que hace una pequeña transición hacia arriba
@mixin hover-effect {
    transition: all 0.3s ease-in-out;
    &:hover {
      transform: translateY(-5px);
      box-shadow: 0px 10px 20px rgba(0, 0, 0, 0.1);
    }
  }
  
  //Incluye la transición y el borde redondo
  .btn {
    @include redondear-border(5px);
    @include hover-effect;
    padding: 30px;
    font-size: 30px;
  }

//Crea una caja que recibe como parametro el color de fondo y el nombre de la clase
@mixin crea-caja($color-fondo: #26619C, $name: lapislazuli) {
    .box-#{$name} {
      box-sizing: border-box;
      background-color: $color-fondo;
      width: 100%;
      height: 100px;
      padding: 20px;
      &:hover{
        cursor: pointer;
      }
    }
  }

  @include crea-caja;

  @mixin crea-mensaje($color: green, $name: verde) {
    .mensaje-#{$name} {
      background-color: $color;
      border: 1px solid #ccc;
      padding: 10px;
      color: #333;
    }
  }

  @include crea-mensaje;

  @mixin crea-mensaje($color: red, $name: rojo) {
    .mensaje-#{$name} {
      background-color: $color;
      border: 1px solid #ccc;
      padding: 10px;
      color: #333;
    }
  }

  @include crea-mensaje;

  //Tipografia Helvetica
  @mixin tipografia {
    font-family: 'Helvetica Neue', sans-serif;
    font-weight: bold;
    text-transform: uppercase;
  }
  
  h1, h2, h3 {
    @include tipografia;
  }


//Creacion de un grid mediante funciones
  $grid: (
  cantidad-col: 12,
  ancho-col: 60px,
  margen: 20px,
  container: 960px
);

@function calc-container($grid: $grid) {
    @return (map-get($grid, ancho-col) + map-get($grid, margen)) * map-get($grid, cantidad-col);
  }
  // ancho de cada columna
  @function calc-col($cantidad-col, $grid: $grid) {
    @return (map-get($grid, ancho-col) * $cantidad-col) + (map-get($grid, margen) * $cantidad-col) - map-get($grid, margen);
  }
  // margen para cada columna
  @function calc-gutter($gutter) {
    @return $gutter / 2;
  }

  //Aumentar letra
  @function aumentar($num) {
    @return $num * 2;
  }

  //Reducir letra
  @function reducir($num) {
    @return $num / 2;
  }
  
  
  .wrap {
    margin: 0 auto;
    width: calc-container();

    &:after {
      clear: both;
      content: '';
      display: block;
    } 
  }
  section {
    float: left;
    margin: 0 calc-gutter(map-get($grid, margen));  
    width: calc-col(8);
    font-size: aumentar(30px);
    box-shadow: 0px 10px 10px rgb(84, 190, 216);
  }
  aside {
    float: left;
    margin: 0 calc-gutter(map-get($grid, margen));
    width: calc-col(4);
    font-size: reducir(60px);
    box-shadow: 0px 10px 10px rgb(80, 156, 80);
  }

  //Array de tamaños que sirve para crear clases con sus parámetros correspondientes
  $tamanos: 10px, 20px, 30px, 40px;

  //Array de colores que sirve para crear clases con sus parámetros correspondientes
  $colores: yellowgreen, gray, blueviolet, olivedrab;

  @each $color in $colores {
    .#{$color}-bg {
      background-color: $color;
      box-shadow: 0px 10px 10px black;
    }
  }

@each $margen in $tamanos {
  .margin-#{$margen} {
    margin: $margen;
  }
}


@each $tamano in $tamanos {
  .padding-#{$tamano} {
    padding: $tamano;
  }
}

$tipos-letras: bold, italic, underline, uppercase;

@each $letra in $tipos-letras {
    .texto-#{$letra} {
        @if $letra == bold {
          font-weight: bold;
        } @else if $letra == italic {
          font-style: italic;
        } @else if $letra == underline {
          text-decoration: underline;
        } @else if $letra == uppercase {
          text-transform: uppercase;
        }
  }
}

@each $size in $tamanos {
    .size-Letra-#{$size} {
      font-size: $size;
    }
  }